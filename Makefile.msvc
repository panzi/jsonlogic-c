ARCH=x64
HOST_ARCH=x64
MSVC_PATH=msvc/install/bin
CC=$(MSVC_PATH)/$(ARCH)/cl
AR=$(MSVC_PATH)/$(ARCH)/lib
BUILD_DIR=build/msvc-$(ARCH)
HOST_BUILD_DIR=build/msvc-$(HOST_ARCH)/debug
LIB_OBJS=$(BUILD_DIR)/obj/tbl/builtins_tbl.obj \
         $(BUILD_DIR)/obj/tbl/extras_tbl.obj \
         $(BUILD_DIR)/obj/tbl/certlogic_tbl.obj \
         $(BUILD_DIR)/obj/tbl/certlogic_extras_tbl.obj \
         $(BUILD_DIR)/obj/array.obj \
         $(BUILD_DIR)/obj/boolean.obj \
         $(BUILD_DIR)/obj/extras.obj \
         $(BUILD_DIR)/obj/hash.obj \
         $(BUILD_DIR)/obj/iterator.obj \
         $(BUILD_DIR)/obj/compare.obj \
         $(BUILD_DIR)/obj/error.obj \
         $(BUILD_DIR)/obj/json.obj \
         $(BUILD_DIR)/obj/jsonlogic.obj \
         $(BUILD_DIR)/obj/certlogic.obj \
         $(BUILD_DIR)/obj/number.obj \
         $(BUILD_DIR)/obj/object.obj \
         $(BUILD_DIR)/obj/operations.obj \
         $(BUILD_DIR)/obj/string.obj

SO_OBJS=$(patsubst $(BUILD_DIR)/obj/%,$(BUILD_DIR)/shared-obj/%,$(LIB_OBJS))

SO_EXT=.dll
SO_PREFIX=
BIN_EXT=.exe
RELEASE=OFF

# C4100 ... unreferenced formal parameter
# C4102 ... unreferenced label
# C4255 ... no function prototype given
# C4710 ... function not inlined
# C4711 ... function selected for inline expansion
# C4820 ... padding added after data member
# C5045 ... Compiler will insert Spectre mitigation for memory load if /Qspectre switch specified
CFLAGS=/std:c11 /utf-8 /nologo /Wall /wd4100 /wd4102 /wd4255 /wd4710 /wd4711 /wd4820 /wd5045
INC_DIRS=/Isrc
EXAMPLES=$(BUILD_DIR)/examples/benchmark$(BIN_EXT) \
         $(BUILD_DIR)/examples/parse_json$(BIN_EXT) \
         $(BUILD_DIR)/examples/jsonlogic$(BIN_EXT) \
         $(BUILD_DIR)/examples/jsonlogic_extras$(BIN_EXT) \
         $(BUILD_DIR)/examples/certlogic$(BIN_EXT) \
         $(BUILD_DIR)/examples/certlogic_extras$(BIN_EXT)
EXAMPLES_SHARED=$(patsubst $(BUILD_DIR)/examples/%,$(BUILD_DIR)/examples-shared/%,$(EXAMPLES))
LIB=$(BUILD_DIR)/lib/libjsonlogic.lib
SO=$(BUILD_DIR)/lib/$(SO_PREFIX)jsonlogic$(SO_EXT)
INC=$(BUILD_DIR)/include/jsonlogic.h \
    $(BUILD_DIR)/include/jsonlogic_defs.h \
    $(BUILD_DIR)/include/jsonlogic_extras.h

ifeq ($(RELEASE),ON)
    CFLAGS    += /DNDEBUG /O2
    BUILD_DIR := $(BUILD_DIR)/release
else
ifeq ($(RELEASE),OFF)
    CFLAGS    += /Od /Z7
    BUILD_DIR := $(BUILD_DIR)/debug
else
    $(error illegal value for RELEASE=$(RELEASE))
endif
endif

.PHONY: static shared lib so inc examples examples_shared \
        clean install uninstall test test_shared ops

static: lib inc

shared: so inc

test: $(BUILD_DIR)/bin/test$(BIN_EXT)
	$<

test_shared: $(BUILD_DIR)/bin/test_shared$(BIN_EXT)
	LD_LIBRARY_PATH=$(BUILD_DIR)/lib $<

ops: $(HOST_BUILD_DIR)/bin/compile_operations$(BIN_EXT)
	@mkdir -p $(HOST_BUILD_DIR)/src
	$< $(HOST_BUILD_DIR)/src

lib: $(LIB)

examples: $(EXAMPLES)

examples_shared: $(EXAMPLES_SHARED)

so: $(SO)

inc: $(INC)

ifneq ($(ARCH),$(HOST_ARCH))
$(HOST_BUILD_DIR)/bin/compile_operations$(BIN_EXT): src/compile_operations.c src/hash.c src/jsonlogic.h src/jsonlogic_intern.h
	$(MAKE) -f Makefile.msvc ARCH=$(HOST_ARCH) HOST_ARCH=$(HOST_ARCH) $(HOST_BUILD_DIR)/bin/compile_operations$(BIN_EXT)
endif

$(BUILD_DIR)/bin/compile_operations$(BIN_EXT): $(BUILD_DIR)/obj/compile_operations.obj $(BUILD_DIR)/obj/hash.obj src/jsonlogic.h src/jsonlogic_intern.h
	@mkdir -p $(BUILD_DIR)/bin
	$(CC) $(CFLAGS) $(INC_DIRS) /Fe$@ $< $(BUILD_DIR)/obj/hash.obj

$(BUILD_DIR)/bin/test$(BIN_EXT): $(BUILD_DIR)/obj/test.obj src/jsonlogic.h src/jsonlogic_intern.h $(LIB)
	@mkdir -p $(BUILD_DIR)/bin
	$(CC) $(CFLAGS) $(STATIC_FLAG) /Fe$@ $(INC_DIRS) $< $(LIB)

# shared binary but statically linked objects, because we're using internal APIs in tests
$(BUILD_DIR)/bin/test_shared$(BIN_EXT): $(BUILD_DIR)/shared-obj/test.obj src/jsonlogic.h src/jsonlogic_intern.h $(SO_OBJS) $(SO)
	@mkdir -p $(BUILD_DIR)/bin
	$(CC) $(CFLAGS) $(SO_FLAGS) $(INC_DIRS) /Fe$@ $(SO_OBJS) $<

$(BUILD_DIR)/examples/%$(BIN_EXT): $(BUILD_DIR)/obj/examples/%.obj $(LIB)
	@mkdir -p $(BUILD_DIR)/examples
	$(CC) $(CFLAGS) $(STATIC_FLAG) /Fe$@ $< $(LIB)

$(BUILD_DIR)/examples-shared/%$(BIN_EXT): $(BUILD_DIR)/shared-obj/examples/%.obj $(SO)
	@mkdir -p $(BUILD_DIR)/examples-shared
	$(CC) $(CFLAGS) /Fe$@ $< $(BUILD_DIR)/lib/jsonlogic.lib

$(BUILD_DIR)/src/builtins_tbl.c: $(HOST_BUILD_DIR)/bin/compile_operations$(BIN_EXT)
	@mkdir -p $(BUILD_DIR)/src
	$< $(BUILD_DIR)/src

$(BUILD_DIR)/src/extras_tbl.c: $(BUILD_DIR)/src/builtins_tbl.c

$(BUILD_DIR)/src/certlogic_tbl.c: $(BUILD_DIR)/src/builtins_tbl.c

$(BUILD_DIR)/src/certlogic_extras_tbl.c: $(BUILD_DIR)/src/builtins_tbl.c

$(BUILD_DIR)/obj/tbl/%.obj: $(BUILD_DIR)/src/%.c src/jsonlogic.h src/jsonlogic_intern.h
	@mkdir -p $(BUILD_DIR)/obj/tbl
	$(CC) $(CFLAGS) $(INC_DIRS) /DJSONLOGIC_STATIC /DJSONLOGIC_WIN_EXPORT /c /Fo:$@ $<

$(BUILD_DIR)/obj/%.obj: src/%.c src/jsonlogic.h src/jsonlogic_intern.h
	@mkdir -p $(BUILD_DIR)/obj
	$(CC) $(CFLAGS) $(INC_DIRS) /DJSONLOGIC_STATIC /DJSONLOGIC_WIN_EXPORT /c /Fo:$@ $<

$(BUILD_DIR)/shared-obj/tbl/%.obj: $(BUILD_DIR)/src/%.c src/jsonlogic.h src/jsonlogic_intern.h
	@mkdir -p $(BUILD_DIR)/shared-obj/tbl
	$(CC) $(CFLAGS) $(SO_FLAGS) $(INC_DIRS) /DJSONLOGIC_WIN_EXPORT /c /Fo:$@ $<

$(BUILD_DIR)/shared-obj/%.obj: src/%.c src/jsonlogic.h src/jsonlogic_intern.h
	@mkdir -p $(BUILD_DIR)/shared-obj
	$(CC) $(CFLAGS) $(SO_FLAGS) $(INC_DIRS) /DJSONLOGIC_WIN_EXPORT /c /Fo:$@ $<

$(BUILD_DIR)/obj/test.obj: tests/test.c src/jsonlogic.h src/jsonlogic_intern.h
	@mkdir -p $(BUILD_DIR)/obj
	$(CC) $(CFLAGS) $(INC_DIRS) /DJSONLOGIC_STATIC /DJSONLOGIC_WIN_EXPORT /c /Fo:$@ $<

$(BUILD_DIR)/shared-obj/test.obj: tests/test.c src/jsonlogic.h src/jsonlogic_intern.h
	@mkdir -p $(BUILD_DIR)/shared-obj
	$(CC) $(CFLAGS) $(SO_FLAGS) $(INC_DIRS) /DJSONLOGIC_WIN_EXPORT /c /Fo:$@ $<

$(BUILD_DIR)/obj/json.obj: src/json.c src/stringify.c src/jsonlogic.h src/jsonlogic_intern.h
	@mkdir -p $(BUILD_DIR)/obj
	$(CC) $(CFLAGS) $(INC_DIRS) /DJSONLOGIC_STATIC /DJSONLOGIC_WIN_EXPORT /c /Fo:$@ $<

$(BUILD_DIR)/shared-obj/json.obj: src/json.c src/stringify.c src/jsonlogic.h src/jsonlogic_intern.h
	@mkdir -p $(BUILD_DIR)/shared-obj
	$(CC) $(CFLAGS) $(SO_FLAGS) $(INC_DIRS) /DJSONLOGIC_WIN_EXPORT /c /Fo:$@ $<

$(BUILD_DIR)/obj/examples/%.obj: examples/%.c
	@mkdir -p $(BUILD_DIR)/obj/examples
	$(CC) $(CFLAGS) $(INC_DIRS) /DJSONLOGIC_STATIC /c /Fo:$@ $<

$(BUILD_DIR)/shared-obj/examples/%.obj: examples/%.c
	@mkdir -p $(BUILD_DIR)/shared-obj/examples
	$(CC) $(CFLAGS) $(SO_FLAGS) $(INC_DIRS) /c /Fo:$@ $<

$(BUILD_DIR)/examples/%$(BIN_EXT): $(BUILD_DIR)/obj/examples/%.obj
	$(CC) $(CFLAGS) /Fe$@ $^

$(BUILD_DIR)/examples-shared/%$(BIN_EXT): $(BUILD_DIR)/shared-obj/examples/%.obj
	$(CC) $(CFLAGS) /Fe$@ $^

$(LIB): $(LIB_OBJS)
	@mkdir -p $(BUILD_DIR)/lib
	$(AR) /nologo /OUT:$@ $^

$(SO): $(SO_OBJS)
	@mkdir -p $(BUILD_DIR)/lib
	$(CC) $(CFLAGS) /LD /Fe$@ $^

$(BUILD_DIR)/include/%.h: src/%.h
	@mkdir -p $(BUILD_DIR)/include
	cp $< $@

clean:
	rm -vf $(LIB_OBJS) $(SO_OBJS) $(LIB) $(EXAMPLES) $(EXAMPLES_SHARED) $(INC) \
	       $(BUILD_DIR)/bin/test$(BIN_EXT) $(BUILD_DIR)/bin/test_shared$(BIN_EXT) \
	       $(BUILD_DIR)/obj/test.obj $(BUILD_DIR)/shared-obj/test.obj \
	       $(BUILD_DIR)/obj/compile_operations.obj $(BUILD_DIR)/bin/compile_operations$(BIN_EXT) \
	       $(BUILD_DIR)/src/extras_tbl.c $(BUILD_DIR)/src/builtins_tbl.c \
	       $(BUILD_DIR)/src/certlogic_extras_tbl.c $(BUILD_DIR)/src/certlogic_tbl.c || true
